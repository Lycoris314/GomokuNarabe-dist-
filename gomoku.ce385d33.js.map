{"version":3,"sources":["global.ts","gomoku.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"gomoku.ce385d33.js","sourceRoot":"..\\src","sourcesContent":["export const STONE = {\r\n    NONE: 0,\r\n    FIRST: 1,\r\n    SECOND: 2,\r\n    WALL: -1,\r\n};\r\n\r\nexport const GAME_STATE = {\r\n    PENDING: 0,\r\n    WIN: 1,\r\n    DRAW: 2,\r\n};\r\n","import { GAME_STATE, STONE } from \"./global\";\r\n\r\nexport class GomokuNarabe {\r\n    #field: number[][];\r\n    #turn: number;\r\n    #size: number;\r\n\r\n    constructor(n: number) {\r\n        this.#size = n;\r\n        this.#turn = STONE.FIRST;\r\n        this.#field = new Array(n + 2)\r\n            .fill(null)\r\n            .map((_) => new Array(n + 2).fill(STONE.NONE));\r\n        for (let i = 0; i < n + 2; i++) {\r\n            this.#field[i][0] = STONE.WALL;\r\n            this.#field[i][n + 1] = STONE.WALL;\r\n            this.#field[0][i] = STONE.WALL;\r\n            this.#field[n + 1][i] = STONE.WALL;\r\n        }\r\n    }\r\n\r\n    get field() {\r\n        return this.#field.slice(1, -1).map((arr) => arr.slice(1, -1));\r\n    }\r\n    get turn() {\r\n        return this.#turn;\r\n    }\r\n    get size() {\r\n        return this.#size;\r\n    }\r\n\r\n    getOpponentTurn() {\r\n        return this.turn === STONE.FIRST ? STONE.SECOND : STONE.FIRST;\r\n    }\r\n\r\n    putStone(row: number, col: number) {\r\n        if (this.#field[row][col] !== STONE.NONE) {\r\n            return null;\r\n        } else {\r\n            this.#field[row][col] = this.#turn;\r\n            const state = this.checkGameState(\r\n                row,\r\n                col,\r\n                this.#field,\r\n                this.#turn\r\n            );\r\n            this.#turn = this.getOpponentTurn();\r\n            return state;\r\n        }\r\n    }\r\n\r\n    checkGameState(r: number, c: number, field: number[][], turn: number) {\r\n        if (countStone([0, 1]) + countStone([0, -1]) >= 4) {\r\n            return GAME_STATE.WIN;\r\n        } else if (countStone([1, 0]) + countStone([-1, 0]) >= 4) {\r\n            return GAME_STATE.WIN;\r\n        } else if (countStone([1, 1]) + countStone([-1, -1]) >= 4) {\r\n            return GAME_STATE.WIN;\r\n        } else if (countStone([1, -1]) + countStone([-1, 1]) >= 4) {\r\n            return GAME_STATE.WIN;\r\n        } else if (\r\n            field.every((arr) => {\r\n                return arr.every((e) => e !== STONE.NONE);\r\n            })\r\n        ) {\r\n            return GAME_STATE.DRAW;\r\n        } else {\r\n            return GAME_STATE.PENDING;\r\n        }\r\n\r\n        //dir方向に同種の石がいくつ連続してあるか数える\r\n        function countStone(dir: [number, number]) {\r\n            let row = r;\r\n            let col = c;\r\n            let count = 0;\r\n            rec();\r\n            function rec() {\r\n                row += dir[0];\r\n                col += dir[1];\r\n                if (field[row][col] !== turn) {\r\n                    return;\r\n                }\r\n                count++;\r\n                rec();\r\n            }\r\n            return count;\r\n        }\r\n    }\r\n\r\n    //COMの次の一手\r\n    comNext() {\r\n        //boxには空のマスのリストを入れる\r\n        let box: number[] | [] = [];\r\n        for (let i = 1; i <= this.#size; i++) {\r\n            for (let j = 1; j <= this.#size; j++) {\r\n                if (this.#field[i][j] == STONE.NONE) {\r\n                    box.push([i, j] as never);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            if (\r\n                this.checkGameState(i, j, field, this.turn) === GAME_STATE.WIN\r\n            ) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.getOpponentTurn();\r\n            if (\r\n                this.checkGameState(i, j, field, this.getOpponentTurn()) ===\r\n                GAME_STATE.WIN\r\n            ) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            const gsa = this.getStoneArray(i, j, field, this.turn);\r\n            let idx = gsa.counts.findIndex((e) => e == 3);\r\n            if (idx >= 0 && gsa.noneEnds[idx] == 2) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            const gsa = this.getStoneArray(i, j, field, this.turn);\r\n            let idx = gsa.counts.findIndex((e) => e == 3);\r\n            let idx2 = gsa.counts.findIndex((e) => e == 2);\r\n            if (\r\n                idx >= 0 &&\r\n                gsa.noneEnds[idx] == 1 &&\r\n                idx2 >= 0 &&\r\n                gsa.noneEnds[idx2] == 2\r\n            ) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            const gsa = this.getStoneArray(i, j, field, this.turn);\r\n            let idx = gsa.counts.findIndex((e) => e == 3);\r\n            if (idx >= 0 && gsa.noneEnds[idx] == 1) {\r\n                if (Math.random() < 0.5) {\r\n                    continue;\r\n                }\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        //相手の4連を封じる\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.getOpponentTurn();\r\n            const gsa = this.getStoneArray(i, j, field, this.getOpponentTurn());\r\n            let idx = gsa.counts.findIndex((e) => e == 3);\r\n            if (idx >= 0 && gsa.noneEnds[idx] == 2) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n        //相手の4-3を封じる\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.getOpponentTurn();\r\n            const gsa = this.getStoneArray(i, j, field, this.getOpponentTurn());\r\n            let idx = gsa.counts.findIndex((e) => e == 3);\r\n            let idx2 = gsa.counts.findIndex((e) => e == 2);\r\n            if (\r\n                idx >= 0 &&\r\n                gsa.noneEnds[idx] == 1 &&\r\n                idx2 >= 0 &&\r\n                gsa.noneEnds[idx2] == 2\r\n            ) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            const gsa = this.getStoneArray(i, j, field, this.turn);\r\n\r\n            let idx = gsa.counts.findIndex((e) => e == 2);\r\n            if (idx >= 0 && gsa.noneEnds[idx] == 2) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.getOpponentTurn();\r\n            const gsa = this.getStoneArray(i, j, field, this.getOpponentTurn());\r\n\r\n            let idx = gsa.counts.findIndex((e) => e == 2);\r\n            if (idx >= 0 && gsa.noneEnds[idx] == 2) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        for (let elm of box) {\r\n            let [i, j] = [elm[0], elm[1]];\r\n            let field = structuredClone(this.#field);\r\n            field[i][j] = this.turn;\r\n            const gsa = this.getStoneArray(i, j, field, this.turn);\r\n            let idx2 = gsa.counts.findIndex((e) => e == 1);\r\n            let idx3 = gsa.counts.findIndex((e, i) => e == 1 && i > idx2);\r\n            if (\r\n                idx2 >= 0 &&\r\n                gsa.noneEnds[idx2] == 2 &&\r\n                idx3 >= 0 &&\r\n                gsa.noneEnds[idx3] == 2\r\n            ) {\r\n                return [i - 1, j - 1];\r\n            }\r\n        }\r\n\r\n        let midIndex = Math.floor(box.length / 2);\r\n        let [i, j] = [box[midIndex][0], box[midIndex][1]];\r\n        return [i - 1, j - 1];\r\n    }\r\n\r\n    //横方向、縦方向、斜め方向×2　の４方向について同種の石が連続している数およびその両端が空マスである数を計算してリストにして返す。\r\n    getStoneArray(r: number, c: number, field: number[][], turn: number) {\r\n        let countBox = [];\r\n        let noneEndBox = [];\r\n        countBox.push(\r\n            (countStone([0, 1]).count + countStone([0, -1]).count) as never\r\n        );\r\n        noneEndBox.push(\r\n            (countStone([0, 1]).noneEnd + countStone([0, -1]).noneEnd) as never\r\n        );\r\n        countBox.push(\r\n            (countStone([1, 0]).count + countStone([-1, 0]).count) as never\r\n        );\r\n        noneEndBox.push(\r\n            (countStone([1, 0]).noneEnd + countStone([-1, 0]).noneEnd) as never\r\n        );\r\n        countBox.push(\r\n            (countStone([1, 1]).count + countStone([-1, -1]).count) as never\r\n        );\r\n        noneEndBox.push(\r\n            (countStone([1, 1]).noneEnd + countStone([-1, -1]).noneEnd) as never\r\n        );\r\n        countBox.push(\r\n            (countStone([1, -1]).count + countStone([-1, 1]).count) as never\r\n        );\r\n        noneEndBox.push(\r\n            (countStone([1, -1]).noneEnd + countStone([-1, 1]).noneEnd) as never\r\n        );\r\n\r\n        return { counts: countBox, noneEnds: noneEndBox };\r\n\r\n        //dir方向に同種の石が連続して何個あるか(count)、さらにその直後が空マスかどうか(空マスのときnoneEndは1)を返す。\r\n        function countStone(dir: [number, number]) {\r\n            let row = r;\r\n            let col = c;\r\n            let count = 0;\r\n            let noneEnd = 0;\r\n            rec();\r\n            function rec() {\r\n                row += dir[0];\r\n                col += dir[1];\r\n                if (field[row][col] !== turn) {\r\n                    noneEnd = field[row][col] == STONE.NONE ? 1 : 0;\r\n                    return;\r\n                }\r\n                count++;\r\n                rec();\r\n            }\r\n            return { count: count, noneEnd: noneEnd };\r\n        }\r\n    }\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}